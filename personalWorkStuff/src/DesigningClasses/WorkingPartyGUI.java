package DesigningClasses;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

import java.util.Calendar;
import java.util.HashMap;
import java.awt.FlowLayout;
import java.lang.Object;


public class WorkingPartyGUI extends StudentDatabase{
	private static Stage window;
	private static Calendar cal;
	private static Label text;
	private static Scene scene1;
	private static TableView<Student> table;
	private static ObservableList<Student> list;
	private static ObservableList<Student> roster;
	private static ObservableList<String> listString;
	public WorkingPartyGUI(ObservableList<Student> roster)
	{
		cal = Calendar.getInstance();
		this.roster = roster;
	}
	/*
	
	public static ObservableList<String> generateWP()
	{
		int needed = 20;
		for(int a : roster.keySet())
		{
			for(int b = 0; b < roster.get(a).size(); b++)
			{
				if(list.size() < needed)
				{
					list.add();
				}
			}
		}
		return list;
		
	}
	*/
	public static void display()
	{
		text = new Label();
		text.setText("Generated by PFC Negron on: " + cal.getTime() + " for Platoon MAT");
		StudentDatabase db = new StudentDatabase();
		window = new Stage();
		window.setTitle("Working Party for: " + cal.getTime());
		window.setMinWidth(250);
		list = FXCollections.observableArrayList();
		TableColumn<Student, String> xAxis = new TableColumn<>("Name");
		xAxis.setMinWidth(700);
		xAxis.setCellValueFactory(new PropertyValueFactory<>("Name"));
		table = new TableView<>();
		table.setItems(roster);
		table.getColumns().add(xAxis);
		HBox hBox = new HBox();
		hBox.setPadding(new Insets(10,10,10,10));
		hBox.setSpacing(10);
		hBox.getChildren().add(text);
		VBox vBox = new VBox(20);
		vBox.getChildren().addAll(table, hBox);
		scene1 = new Scene(vBox, 1280, 720);
		window.setScene(scene1);
		window.show();
		/*
		 * THIS IS LEGACY CODE THAT WILL BE REMOVED IN A FUTURE UPDATE AS THE TABLE
		 * HERE DOES NOT FUNCTION AS NEEDED.
		window = new Stage();
		window.setTitle("Working Party for: " + cal.getTime());
		window.setMinWidth(250);
		text = new Label();
		text.setText("Working Party Generated on: " + cal.getTime() + " by PFC Negron for Platoon MAT");
		table = new TableView<>();
		table.setItems(db.initializeList());
		TableColumn<Student, String> names = new TableColumn<>("Names");
		names.setMinWidth(700);
		names.setCellValueFactory(new PropertyValueFactory<>("Names"));
		table.getColumns().add(names);
		
		VBox layout = new VBox(5);
		layout.getChildren().addAll(text, table);
		scene1 = new Scene(layout);
		window.setScene(scene1);
		window.showAndWait();
		for(int a = 0; a < roster.size(); a++)
		{
			System.out.println(roster.get(a).getName());
		}
		*/
	}
	/*
	public void start(Stage primaryStage) throws Exception
	{
		window = primaryStage;
		primaryStage.setTitle("Working party for: " + cal.getTime());
		HBox hBox = new HBox();
		hBox.setPadding(new Insets(10,10,10,10));
		hBox.setSpacing(10);
		hBox.getChildren().addAll(text);
		VBox vBox = new VBox(20);
		vBox.getChildren().addAll(hBox);
		scene1 = new Scene(vBox, 1280, 720);
		window.setScene(scene1);
		window.show();
	}
	*/
	public static ObservableList<String> convertNames()
	{
		listString = FXCollections.observableArrayList();
		if(listString.size() < 21)
		{
			for(int a = 0 ; a < roster.size(); a++)
			{
				listString.add(roster.get(a).getName());
			}
		}
		return listString;
	}
}
